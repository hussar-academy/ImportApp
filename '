# Operations worker.
class CsvProcessorWorker
  include Sidekiq::Worker
  include SidekiqStatus::Worker

  sidekiq_options retry: false

  def perform(csv_file)

    self.total = 100 # setting total to 100
    at 0 # starts off at 0%
    file = CSVImporter.new(csv_file)
    file.scan
    at 10
    # Inserting categories and fail silently if it's already there.
    file.categories.each do |category|
      Category.create(name: category)
    end
    at 40
    # Inserting companies and fail silently if it's already there.
    # Extract only the unique as it's an intensive operation.
    @company_cach = file.companies.uniq.map do |company|
      Company.create(name: company)
    end
    at 69



    file.rows.each do |row|
      Operation.create!(
        company: find_company(row[:company]),
        invoice_num: row[:invoice_num],
        invoice_date: row[:invoice_date],
        operation_date: row[:operation_date],
        amount: row[:amount],
        reporter: row[:reporter],
        notes: row[:notes],
      )
    end
    at 100
  end

  private

  def find_company(name)
    @company_cach ||= Company.find_by(name: name)
  end
end
